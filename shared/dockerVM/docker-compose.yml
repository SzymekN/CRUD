version: '3.9'

services:
  cassandra:
    image: cassandra
    container_name: cassandra
    restart: always
    ports:
      - 9042:9042
      - 9160:9160
    volumes:
      - /cassandra/data:/var/lib/cassandra
      - /vagrant_data:/shared
    environment:
      - CASSANDRA_CLUSTER_NAME=userapi
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 5s
      timeout: 5s
      retries: 5
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=userapi
      - POSTGRES_PASSWORD=userapi
    ports:
      - '5432:5432'
    volumes: 
      - /postgres/data:/var/lib/postgresql/data
      - /vagrant_data:/shared
    healthcheck:
      test: ["CMD", "pg_isready", "-U" ,"userapi"]
      interval: 10s
      timeout: 5s
      retries: 5
  userapi:
    depends_on:
      cassandra:
        condition: service_healthy
      postgres:
        condition: service_healthy
    build: /vagrant_data
    container_name: userapi
    restart: always
    ports:
      - '8200:8200'
      - '8201:8201'
    environment:
      - PG_HOST=postgres
      - CASSANDRA_HOST=cassandra

  zookeeper:
      image: docker.io/bitnami/zookeeper:3.8
      container_name: zookeper-1
      ports:
        - "2181:2181"
      volumes:
        - "/zookeeper:/bitnami/"
      environment:
        - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
      image: docker.io/bitnami/kafka:3.2
      container_name: kafka-1
      ports:
        - "9092:9092"
      volumes:
        - "/kafka:/bitnami/kafka/data"
      environment:
        - KAFKA_BROKER_ID=1
        - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
        # teraz ip to adres vm, jeśli producenci i konsumenci będą na dockerze to trzeba będzie zmienić pewnie na nazwy serwisów
        - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092
        - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
        - ALLOW_PLAINTEXT_LISTENER=yes
        - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      depends_on:
        - zookeeper

        # (cd /opt/bitnami/kafka/bin/windows/; ./kafka-topics.sh --create --bootstrap-server kafka-kafka-1:9092 --replication-factor 1 --partitions 1 --topic messages)
        # . /opt/bitnami/kafka/bin/windows/kafka-topics.sh --create --bootstrap-server kafka-1:9092 --replication-factor 1 --partitions 1 --topic messages